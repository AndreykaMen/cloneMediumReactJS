import { useState, useEffect, useCallback } from "react";
import axios from "axios";

import useLocalStorage from "hooks/useLocalStorage";

export default ( url ) => {
  // const baseUrl = 'https://conduit.productionready.io/api';
  const baseUrl = 'http://localhost:3000/api';
  const [isLoading, setIsLoading] = useState( false );
  const [response, setResponse] = useState( null );
  const [error, setError] = useState( null );
  const [options, setOptions] = useState( {} );
  const [token] = useLocalStorage( 'token' );

  const doFetch = useCallback( ( options = {} ) => {
    setOptions( options );
    setIsLoading( true );
  }, [] );

  useEffect( () => {
    const requestOptions = {
      ...options,
      headers: {
        'Content-Type' : 'application/xml',
        authorization: token ? `Token ${token}` : ""
      },
      withCredentials: false,
    };
    if ( !isLoading ) {
      return;
    }
    axios( baseUrl + url, requestOptions,{ mode: 'cors' } ).then( res => {
      setIsLoading( false );
      setResponse( res.data );
    } ).catch( error => {
      setIsLoading( false );
      setError( error.response.data );
    } );
  }, [isLoading, options, url, token] );
  return [{isLoading, response, error}, doFetch];
}