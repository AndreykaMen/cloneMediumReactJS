import React, { useEffect, useContext } from "react";
import { Link, useParams } from "react-router-dom";
import useFetch from "hooks/useFetch";
import Loading from "components/loading";
import TagList from "components/tagList";
import ErrorMessage from "components/errorMessage";
import { CurrentUserContext } from "contexts/currentUser";

const Article = () => {
  const params = useParams();
  const slug = params.slug;
  const apiUrl = `/articles/${slug}`;
  const [{response, isLoading, error}, doFetch] = useFetch( apiUrl );
  const [currentUserState] = useContext( CurrentUserContext );
  const isAuthor = () => {
    if ( !response || !currentUserState.isLoggedIn ) {
      return false;
    }
    return (response.article.author.username === currentUserState.currentUser.username);
  };

  const deleteArticle = () => {
    console.log( "deleteArticle" );
  };

  console.log( "isAuthor", isAuthor() );
  useEffect( () => {
    doFetch();
  }, [doFetch] );
  return (
      <div className="article-page">
        <div className="banner">
          {!isLoading && response && (
              <div className="container">
                <h1>{response.article.title}</h1>
                <div className="article-meta">
                  <Link to={`/profiles/${response.article.author.username}`}>
                    <img src={response.article.author.image} alt="image"/>
                  </Link>
                  <div className="info">
                    <Link to={`/profiles/${response.article.author.username}`}>
                      {response.article.author.username}
                    </Link>
                    <span className="date">
                      {response.article.createdAt}
                    </span>
                  </div>
                  {isAuthor() && (
                      <span>
                        <Link to={`/articles/${response.article.slug}/edit`}
                              className="btn btn-outline-secondary btn-sm">
                          <i className="ion-edit"/>
                          Edit Article
                        </Link>
                        <button className="btn btn-outline-danger btn-sm"
                                onClick={deleteArticle}>
                          <i className="ion-trash-a"/>
                          Delete Article
                        </button>
                      </span>
                  )}
                </div>
              </div>
          )}
        </div>
        <div className="container page">
          {isLoading && <Loading/>}
          {error && <ErrorMessage/>}
          {!isLoading && response && (
              <div className="row article-content">
                <div className="col-xs-12">
                  <div>
                    <p>{response.article.body}</p>
                  </div>
                  <TagList tags={response.article.tagList}/>
                </div>
              </div>
          )}
        </div>
      </div>
  );
};

export default Article;