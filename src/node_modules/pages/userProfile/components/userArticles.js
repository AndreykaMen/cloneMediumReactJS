import React, { Fragment, useEffect } from "react";
import { stringify } from "query-string";

import { getPaginator, limit } from "utils";
import useFetch from "hooks/useFetch";
import Loading from "components/loading";
import ErrorMessage from "components/errorMessage";
import Feed from "components/feed";
import Pagination from "components/pagination";

const UserArticles = ( {username, location, isFavorites, url} ) => {
  const {offset, currentPage} = getPaginator( location.search );

  const getApiUrl = ( {username, location, isFavorites} ) => {
    const params = isFavorites
        ? {limit, offset, favorited: username}
        : {limit, offset, author: username};

    return `/articles?${stringify( params )}`;
  };

  const apiUrl = getApiUrl( {username, offset, isFavorites, url} );
  const [{response, isLoading, error}, doFetch] = useFetch( apiUrl );

  useEffect( () => {
    doFetch();
  }, [doFetch,isFavorites, offset] );

  return (
      <div>
        {isLoading && <Loading/>}
        {error && <ErrorMessage/>}
        {!isLoading && response && (
            <Fragment>
              <Feed articles={response.articles}/>
              <Pagination total={response.articlesCount}
                          url={url}
                          currentPage={currentPage}
                          limit={limit}
                          />
            </Fragment>
        )}
      </div>
  );
};

export default UserArticles;